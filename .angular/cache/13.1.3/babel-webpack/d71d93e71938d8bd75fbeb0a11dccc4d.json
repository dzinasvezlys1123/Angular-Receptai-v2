{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nimport * as i3 from \"../auth/auth.service\";\nexport let DataStorageServiceService = /*#__PURE__*/(() => {\n  class DataStorageServiceService {\n    constructor(http, recipeService, authService) {\n      this.http = http;\n      this.recipeService = recipeService;\n      this.authService = authService;\n    }\n\n    storeRecipes() {\n      var _a;\n\n      if (!((_a = this.recipeService.getRecipes()) === null || _a === void 0 ? void 0 : _a.length)) return; // to prevent add null to the database \n\n      this.http.put('https://recipe-angular-89b6a-default-rtdb.firebaseio.com/recipes.json', this.recipeService.getRecipes()).subscribe(recipes => {\n        console.log(recipes);\n      });\n    }\n\n    fetchRecipes() {\n      return this.http.get('https://recipe-angular-89b6a-default-rtdb.firebaseio.com/recipes.json').pipe(map(recipes => {\n        return recipes.map(recipe => {\n          return Object.assign(Object.assign({}, recipe), {\n            ingrediants: recipe.ingrediants ? recipe.ingrediants : []\n          });\n        });\n      }), tap(recipes => {\n        this.recipeService.setRecipes(recipes);\n      }));\n    }\n\n  }\n\n  DataStorageServiceService.ɵfac = function DataStorageServiceService_Factory(t) {\n    return new (t || DataStorageServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.AuthService));\n  };\n\n  DataStorageServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataStorageServiceService,\n    factory: DataStorageServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataStorageServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}