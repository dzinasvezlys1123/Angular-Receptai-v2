{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction RecipeEditComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelementStart(3, \"label\", 22);\n    i0.ɵɵtext(4, \"Ingredian\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 24);\n    i0.ɵɵelementStart(7, \"label\", 25);\n    i0.ɵɵtext(8, \"Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 27);\n    i0.ɵɵelementStart(11, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function RecipeEditComponent_div_29_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.RemoveIngrediantControl(i_r3);\n    });\n    i0.ɵɵtext(12, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n  }\n}\n\nexport let RecipeEditComponent = /*#__PURE__*/(() => {\n  class RecipeEditComponent {\n    constructor(route, reciprService, router) {\n      this.route = route;\n      this.reciprService = reciprService;\n      this.router = router;\n      this.editMode = false;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = params[\"id\"];\n        this.editMode = params[\"id\"] != null; // to check if we are resive param we recive param we on Edit mode\n        //else we are on new mode /new or /:id/edit\n\n        console.log(this.editMode + \" edit mode\");\n        this.initForm(); // we call it her t o re call it when the Id changed\n      });\n    } // end of ngOnInIt\n\n\n    onSubmit() {\n      // const newRecipe = new Recipe(\n      //   this.recipeForm.value['name'],\n      //  this.recipeForm.value['path'], \n      //  this.recipeForm.value['discription'],\n      //  this.recipeForm.value['ingrediants'])\n      // or use this.recipeForm.value    \n      if (this.editMode) {\n        this.reciprService.updateRecipe(this.id, this.recipeForm.value);\n      } else {\n        this.reciprService.addRecipe(this.recipeForm.value);\n      }\n\n      console.log(this.recipeForm.value);\n      this.onCancle();\n    } // end on submit\n\n\n    onCancle() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n\n    initForm() {\n      let recipeName = \"\",\n          url = \"\",\n          discription = \"\",\n          recipeIngrediants = new FormArray([]);\n      const recipe = this.reciprService.getRecipe(this.id);\n\n      if (this.editMode) {\n        recipeName = recipe.name;\n        url = recipe.imgPath;\n        discription = recipe.discription;\n\n        if (recipe['ingrediants']) {\n          for (let ingrediant of recipe.ingrediants) {\n            recipeIngrediants.push(new FormGroup({\n              'name': new FormControl(ingrediant.name, Validators.required),\n              'amount': new FormControl(ingrediant.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n            }));\n          }\n        }\n      }\n\n      this.recipeForm = new FormGroup({\n        'name': new FormControl(recipeName, Validators.required),\n        'discription': new FormControl(discription, Validators.required),\n        'imgPath': new FormControl(url, Validators.required),\n        'ingrediants': recipeIngrediants\n      });\n    } // end\n\n\n    get controls() {\n      return this.recipeForm.get('ingrediants').controls;\n    }\n\n    addNewIngrediant() {\n      this.recipeForm.get('ingrediants').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n\n    RemoveIngrediantControl(i) {\n      this.recipeForm.get('ingrediants').removeAt(i);\n    }\n\n  }\n\n  RecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n    return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  RecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeEditComponent,\n    selectors: [[\"app-recipe-edit\"]],\n    decls: 35,\n    vars: 4,\n    consts: [[1, \"row\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"co-md-12\", \"my-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mx-3\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"col-md-12\"], [1, \"col-md-12\", \"my-2\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"img\"], [\"type\", \"text\", \"name\", \"img\", \"id\", \"img\", \"formControlName\", \"imgPath\", 1, \"form-control\"], [\"imgPath\", \"\"], [1, \"row\", \"text-center\"], [\"alt\", \"\", \"srcset\", \"\", 1, \"img-fluid\", 3, \"src\"], [1, \"row\", \"my-2\"], [\"for\", \"discription\"], [\"name\", \"discription\", \"id\", \"discription\", \"cols\", \"80\", \"rows\", \"5\", \"formControlName\", \"discription\", \"placeholder\", \"Discription\", 1, \"form-control\"], [\"formArrayName\", \"ingrediants\", 1, \"row\"], [\"class\", \"col-md-12 my-2\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"mx-2\", 3, \"click\"], [1, \"row\", 3, \"formGroupName\"], [1, \"col-md-5\"], [\"for\", \"ingredian\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"ingredian\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-md-3\"], [\"for\", \"amount\"], [\"type\", \"number\", \"name\", \"amount\", \"id\", \"amount\", \"formControlName\", \"amount\", 1, \"form-control\"], [1, \"col-md-4\", \"mt-4\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function RecipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵtext(4, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_5_listener() {\n          return ctx.onCancle();\n        });\n        i0.ɵɵtext(6, \"Cancle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 0);\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 0);\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵelementStart(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 10, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelementStart(21, \"div\", 5);\n        i0.ɵɵelement(22, \"img\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 14);\n        i0.ɵɵelementStart(24, \"div\", 5);\n        i0.ɵɵelementStart(25, \"label\", 15);\n        i0.ɵɵtext(26, \"Discription\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"textarea\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 17);\n        i0.ɵɵtemplate(29, RecipeEditComponent_div_29_Template, 13, 1, \"div\", 18);\n        i0.ɵɵelement(30, \"hr\");\n        i0.ɵɵelementStart(31, \"div\", 0);\n        i0.ɵɵelementStart(32, \"div\", 5);\n        i0.ɵɵelementStart(33, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_33_listener() {\n          return ctx.addNewIngrediant();\n        });\n        i0.ɵɵtext(34, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(19);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.recipeForm.invalid);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.controls);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.FormArrayName, i4.NgForOf, i3.FormGroupName, i3.NumberValueAccessor],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:red 1px solid}img[_ngcontent-%COMP%]{max-height:20rem;width:26rem}\"]\n  });\n  return RecipeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}